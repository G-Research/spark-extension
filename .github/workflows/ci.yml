name: CI

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:

jobs:
  build:
    name: Build (Spark ${{ matrix.spark-version }} Scala ${{ matrix.scala-version }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - spark-version: '3.0.3'
            spark-compat-version: '3.0'
            scala-version: '2.12.10'
            scala-compat-version: '2.12'

          - spark-version: '3.1.2'
            spark-compat-version: '3.1'
            scala-version: '2.12.10'
            scala-compat-version: '2.12'

          - spark-version: '3.2.0'
            spark-compat-version: '3.2'
            scala-version: '2.12.10'
            scala-compat-version: '2.12'

          - spark-version: '3.2.0'
            spark-compat-version: '3.2'
            scala-version: '2.13.5'
            scala-compat-version: '2.13'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set versions in pom.xml
        run: |
          ./set-version.sh ${{ matrix.spark-version }} ${{ matrix.scala-version }}
          git diff

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-mvn-build-${{ matrix.spark-version }}-${{ matrix.scala-version }}-${{ hashFiles('pom.xml') }}

      - name: Setup JDK 1.8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'zulu'

      - name: Build
        run: mvn --batch-mode compile test-compile package -DskipTests

      - name: Upload Binaries
        uses: actions/upload-artifact@v2
        with:
          name: Binaries-${{ matrix.spark-version }}-${{ matrix.scala-version }}
          path: |
            *
            !.*
            !target/*-javadoc.jar
            !target/site

  test:
    name: Test (Spark ${{ matrix.spark-version }} Scala ${{ matrix.scala-version }} Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    needs: build

    strategy:
      fail-fast: false
      matrix:
        spark-version: ['3.0.3', '3.1.2', '3.2.0']
        scala-compat-version: ['2.12', '2.13']
        python-version: ['3.6', '3.7', '3.8']
        exclude:
          - spark-version: '3.0.3'
            scala-compat-version: '2.13'
          - spark-version: '3.1.2'
            scala-compat-version: '2.13'
        include:
          - spark-version: '3.0.3'
            spark-compat-version: '3.0'
            scala-version: '2.12.10'
            scala-compat-version: '2.12'

          - spark-version: '3.1.2'
            spark-compat-version: '3.1'
            scala-version: '2.12.10'
            scala-compat-version: '2.12'

          - spark-version: '3.2.0'
            spark-compat-version: '3.2'
            scala-version: '2.12.10'
            scala-compat-version: '2.12'

          - spark-version: '3.2.0'
            spark-compat-version: '3.2'
            scala-version: '2.13.5'
            scala-compat-version: '2.13'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set versions in pom.xml
        run: |
          ./set-version.sh ${{ matrix.spark-version }} ${{ matrix.scala-version }}
          git diff

      - name: Fetch Binaries Artifact
        uses: actions/download-artifact@v2
        with:
          name: Binaries-${{ matrix.spark-version }}-${{ matrix.scala-version }}
          path: .

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-mvn-build-${{ matrix.spark-version }}-${{ matrix.scala-version }}-${{ hashFiles('pom.xml') }}

      - name: Setup JDK 1.8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'zulu'

      - name: Cache Pip packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-test-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pypandoc
          pip install -r python/requirements-${{ matrix.spark-compat-version }}_${{ matrix.scala-compat-version }}.txt
          pip install pytest

      - name: Scala Tests
        run: mvn --batch-mode test

      - name: Python Tests
        # no idea how we can test pyspark 3.2 with Scala 2.13
        if: matrix.scala-compat-version != '2.13'
        env:
          PYTHONPATH: python:python/test
        run: |
          mkdir -p target/surefire-reports
          python -m pytest python/test --junit-xml target/surefire-reports/pytest.xml

      - name: Generate Unit Test Report
        if: failure()
        run: mvn --batch-mode surefire-report:report-only

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results (Spark ${{ matrix.spark-version }} Scala ${{ matrix.scala-version }} Python ${{ matrix.python-version }})
          path: |
            target/surefire-reports/*.xml
            !target/surefire-reports/TEST-org.scalatest*.xml
            target/site/surefire-report.html

  event_file:
    name: "Event File"
    runs-on: ubuntu-latest
    steps:
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: Event File
          path: ${{ github.event_path }}
