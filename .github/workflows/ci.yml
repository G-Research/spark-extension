name: CI

on:
  schedule:
    - cron: '0 8 */10 * *'
  push:
    branches:
      - master
    tags:
      - '*'
  merge_group:
  pull_request:
  workflow_dispatch:

jobs:
  event_file:
    name: "Event File"
    runs-on: ubuntu-latest
    steps:
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: Event File
          path: ${{ github.event_path }}

  build-jvm:
    name: "Build JVM"
    uses: "./.github/workflows/build-jvm.yml"
  build-snapshots:
    name: "Build Snapshots"
    uses: "./.github/workflows/build-snapshots.yml"
  build-python:
    name: "Build Python"
    needs: build-jvm
    uses: "./.github/workflows/build-python.yml"

  test-jvm:
    name: "Test JVM"
    needs: build-jvm
    uses: "./.github/workflows/test-jvm.yml"
  test-python:
    name: "Test Python"
    needs: build-jvm
    uses: "./.github/workflows/test-python.yml"
  test-snapshots-jvm:
    name: "Test Snapshots"
    needs: build-snapshots
    uses: "./.github/workflows/test-snapshots.yml"

  check:
    name: "Check"
    needs: build-jvm
    uses: "./.github/workflows/check.yml"

  check-outcome:
    name: "Check outcome"
    needs: check
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download Reports
        uses: actions/download-artifact@v3
        with:
          name: Compat-Report
          path: artifacts/

      - name: Inspect
        run: find artifacts

      - name: Outcome
        id: outcome
        run: |
          if [[ -z "$(ls artifacts/fail-* 2>/dev/null || true)" ]]
          then
            echo "state=success" >> "$GITHUB_OUTPUT"
            echo "description=No removed methods have been found." >> $GITHUB_OUTPUT
          else
            echo "state=pending" >> "$GITHUB_OUTPUT"
            echo "description=Please inspect the check reports whether removed methods are considered breaking changes." >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Set status
        uses: Sibz/github-status-action@650dd1a882a76dbbbc4576fb5974b8d22f29847f
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: 'Check result'
          description: ${{ steps.outcome.outputs.description }}
          state: ${{ steps.outcome.outputs.state }}
          sha: ${{ github.event.pull_request.head.sha || github.sha }}

  test_success:
    name: "Test success"
    runs-on: ubuntu-latest
    needs: [build-python, test-jvm, test-python, test-snapshots-jvm]

    steps:
      - name: Noop
        run: true
        shell: bash
